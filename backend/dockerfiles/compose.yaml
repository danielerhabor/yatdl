services:
  postgres_service:
    container_name: postgres_container
    image: postgres_image
    build:
      context: .
      dockerfile: postgres.Dockerfile
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    networks:
      - db_network

  pgadmin4_service:
    container_name: pgadmin4_container
    build:
      context: .
      dockerfile: pgadmin4.Dockerfile
    image: pgadmin4_image
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=root
      - PGADMIN_LISTEN_PORT=80
    ports:
      - '5050:80'
    volumes:
      - pgadmin4_volume:/var/lib/pgadmin
    networks:
      - db_network

  mongo_service:
    hostname: mongo
    container_name: mongo_container
    build:
      context: .
      dockerfile: mongo.Dockerfile
    image: mongo_image
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_DATABASE=admin
    ports:
      - '27017:27017'
    volumes:
      - mongo_volume:/data/db
    networks:
      - db_network
volumes:
  pgadmin4_volume:
    name: "pgadmin4_volume"
  postgres_volume:
    name: "postgres_volume"
  mongo_volume:
    name: "mongo_volume"

networks:
  db_network:
    name: "db_network"
